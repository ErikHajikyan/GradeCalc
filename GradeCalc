import json
def loadgradebreakdown():
    with open ('gc_setup.json') as data_file:
        course = json.load(data_file)
    grade_breakdown = course['course_setup']['grade_breakdown']
    return grade_breakdown

def loadgc_grades():
    with open ('gc_grades.json') as data_file1:
        gc_grades = json.load(data_file1)
        return gc_grades

def change_grades(gc_grades):
    for key in gc_grades['mygrades']:
        print"Your grade for " + key + 'is ' + str(gc_grades['mygrades'][key])
        x = raw_input('Do you want to change your grade?(Input Yes or No)')
        if x == str('Yes'):
            gc_grades['mygrades'][key] = input('Input your new grade')
    return gc_grades

def saveGrades(new_grades):
    print (json.dumps(new_grades))
    file = open("gc_grades.json", "w")
    file.write(json.dumps(new_grades))
    file.close()


def printCurrentGrade(grades, current_grades):
    curr_grade = 0
    for key in current_grades["mygrades"]:
        if current_grades["mygrades"][key] != -1:
            calc_grade = int(current_grades["mygrades"][key]) * grades[key] / 100
            curr_grade = curr_grade + calc_grade
    return (curr_grade)

def loadconv_matrix():
    with open ('gc_setup.json') as data_file2:
        gc_setup = json.load(data_file2)
        conv_matrix = gc_setup['course_setup']['conv_matrix']
    return conv_matrix

def printCurrentLetter(curr_grade,conv_matrix):
    for i in range(len(conv_matrix)):
        if int(conv_matrix[i]["max"]) >= int(curr_grade) and int(conv_matrix[i]["min"]) <= int(curr_grade):
            print "Your grade is " + str(curr_grade) + " and your letter grade is " + str(conv_matrix[i]["mark"])


def main():
    grade_breakdown = loadgradebreakdown()
    gc_grades = loadgc_grades()
    new_grades = change_grades(gc_grades)
    saveGrades(new_grades)
    curr_grade = printCurrentGrade(grade_breakdown, new_grades)
    conv_matrix = loadconv_matrix()
    printCurrentLetter(curr_grade,conv_matrix)
main()